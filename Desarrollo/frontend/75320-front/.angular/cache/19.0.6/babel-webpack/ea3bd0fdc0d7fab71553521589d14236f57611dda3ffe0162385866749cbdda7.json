{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BackendService {\n  constructor(http) {\n    this.http = http;\n  }\n  construirHeader() {\n    // Aqui obtenemos el token desde el local storage\n    const tokenRecuperado = localStorage.getItem('token');\n    if (tokenRecuperado != '') {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE',\n        Authorization: 'Bearer ' + tokenRecuperado\n      });\n      return headers;\n    } else {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE'\n      });\n      return headers;\n    }\n  }\n  get(urlApi, endpoint, service, routerParams) {\n    const tokenRecuperado = localStorage.getItem('token') || ''; // Evita `null`\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: tokenRecuperado ? `Bearer ${tokenRecuperado}` : ''\n    });\n    return this.http.get(`${urlApi}/${endpoint}/${service}`, {\n      params: routerParams,\n      headers: headers,\n      withCredentials: true\n    });\n  }\n  post(urlApi, endpoint, service,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data) {\n    const tokenRecuperado = localStorage.getItem('token') || ''; // Evita `null`\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: tokenRecuperado ? `Bearer ${tokenRecuperado}` : ''\n    });\n    return this.http.post(`${urlApi}/${endpoint}/${service}`, data, {\n      headers: headers,\n      withCredentials: true\n    });\n  }\n  put(urlApi, endpoint, service,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data) {\n    const tokenRecuperado = localStorage.getItem('token') || ''; // Evita `null`\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: tokenRecuperado ? `Bearer ${tokenRecuperado}` : ''\n    });\n    return this.http.put(`${urlApi}/${endpoint}/${service}`, data, {\n      headers: headers\n    });\n  }\n  postFile(urlApi, endpoint, service,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  data) {\n    const tokenRecuperado = localStorage.getItem('token') || ''; // Evita `null`\n    const headers = new HttpHeaders({\n      mimeType: 'multipart/form-data',\n      Authorization: tokenRecuperado ? `Bearer ${tokenRecuperado}` : ''\n    });\n    return this.http.post(`${urlApi}/${endpoint}/${service}`, data, {\n      headers: headers,\n      withCredentials: true\n    });\n  }\n  static {\n    this.ɵfac = function BackendService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BackendService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: BackendService,\n      factory: BackendService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","BackendService","constructor","http","construirHeader","tokenRecuperado","localStorage","getItem","headers","Authorization","get","urlApi","endpoint","service","routerParams","params","withCredentials","post","data","put","postFile","mimeType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\david\\Documents\\frontend\\75320-front\\src\\app\\services\\backend.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BackendService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  construirHeader() {\r\n    // Aqui obtenemos el token desde el local storage\r\n    const tokenRecuperado = localStorage.getItem('token');\r\n    if (tokenRecuperado != '') {\r\n      const headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE',\r\n        Authorization: 'Bearer ' + tokenRecuperado,\r\n      });\r\n      return headers;\r\n    } else {\r\n      const headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS, PUT, DELETE',\r\n      });\r\n      return headers;\r\n    }\r\n  }\r\n  get<T>(\r\n    urlApi: string,\r\n    endpoint: string,\r\n    service: string,\r\n    routerParams?: HttpParams\r\n  ) {\r\n    const tokenRecuperado = localStorage.getItem('token') || ''; // Evita `null`\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Authorization: tokenRecuperado ? `Bearer ${tokenRecuperado}` : '',\r\n    });\r\n    return this.http.get<T>(`${urlApi}/${endpoint}/${service}`, {\r\n      params: routerParams,\r\n      headers: headers,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  post<T>(\r\n    urlApi: string,\r\n    endpoint: string,\r\n    service: string,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    data: any\r\n  ): Observable<T> {\r\n    const tokenRecuperado = localStorage.getItem('token') || ''; // Evita `null`\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Authorization: tokenRecuperado ? `Bearer ${tokenRecuperado}` : '',\r\n    });\r\n    return this.http.post<T>(`${urlApi}/${endpoint}/${service}`, data, {\r\n      headers: headers,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n\r\n  put<T>(\r\n    urlApi: string,\r\n    endpoint: string,\r\n    service: string,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    data: any\r\n  ): Observable<T> {\r\n    const tokenRecuperado = localStorage.getItem('token') || ''; // Evita `null`\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Authorization: tokenRecuperado ? `Bearer ${tokenRecuperado}` : '',\r\n    });\r\n    return this.http.put<T>(`${urlApi}/${endpoint}/${service}`, data, {\r\n      headers: headers,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  postFile<T>(\r\n    urlApi: string,\r\n    endpoint: string,\r\n    service: string,\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    data: any\r\n  ): Observable<T> {\r\n    const tokenRecuperado = localStorage.getItem('token') || ''; // Evita `null`\r\n    const headers = new HttpHeaders({\r\n      mimeType: 'multipart/form-data',\r\n      Authorization: tokenRecuperado ? `Bearer ${tokenRecuperado}` : '',\r\n    });\r\n    return this.http.post<T>(`${urlApi}/${endpoint}/${service}`, data, {\r\n      headers: headers,\r\n      withCredentials: true,\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAoB,sBAAsB;;;AAM1E,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,eAAeA,CAAA;IACb;IACA,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACrD,IAAIF,eAAe,IAAI,EAAE,EAAE;MACzB,MAAMG,OAAO,GAAG,IAAIR,WAAW,CAAC;QAC9B,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE,iCAAiC;QACjES,aAAa,EAAE,SAAS,GAAGJ;OAC5B,CAAC;MACF,OAAOG,OAAO;IAChB,CAAC,MAAM;MACL,MAAMA,OAAO,GAAG,IAAIR,WAAW,CAAC;QAC9B,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE;OACjC,CAAC;MACF,OAAOQ,OAAO;IAChB;EACF;EACAE,GAAGA,CACDC,MAAc,EACdC,QAAgB,EAChBC,OAAe,EACfC,YAAyB;IAEzB,MAAMT,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7D,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClCS,aAAa,EAAEJ,eAAe,GAAG,UAAUA,eAAe,EAAE,GAAG;KAChE,CAAC;IACF,OAAO,IAAI,CAACF,IAAI,CAACO,GAAG,CAAI,GAAGC,MAAM,IAAIC,QAAQ,IAAIC,OAAO,EAAE,EAAE;MAC1DE,MAAM,EAAED,YAAY;MACpBN,OAAO,EAAEA,OAAO;MAChBQ,eAAe,EAAE;KAClB,CAAC;EACJ;EAEAC,IAAIA,CACFN,MAAc,EACdC,QAAgB,EAChBC,OAAe;EACf;EACAK,IAAS;IAET,MAAMb,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7D,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClCS,aAAa,EAAEJ,eAAe,GAAG,UAAUA,eAAe,EAAE,GAAG;KAChE,CAAC;IACF,OAAO,IAAI,CAACF,IAAI,CAACc,IAAI,CAAI,GAAGN,MAAM,IAAIC,QAAQ,IAAIC,OAAO,EAAE,EAAEK,IAAI,EAAE;MACjEV,OAAO,EAAEA,OAAO;MAChBQ,eAAe,EAAE;KAClB,CAAC;EACJ;EAEAG,GAAGA,CACDR,MAAc,EACdC,QAAgB,EAChBC,OAAe;EACf;EACAK,IAAS;IAET,MAAMb,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7D,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAAC;MAC9B,cAAc,EAAE,kBAAkB;MAClCS,aAAa,EAAEJ,eAAe,GAAG,UAAUA,eAAe,EAAE,GAAG;KAChE,CAAC;IACF,OAAO,IAAI,CAACF,IAAI,CAACgB,GAAG,CAAI,GAAGR,MAAM,IAAIC,QAAQ,IAAIC,OAAO,EAAE,EAAEK,IAAI,EAAE;MAChEV,OAAO,EAAEA;KACV,CAAC;EACJ;EAIAY,QAAQA,CACNT,MAAc,EACdC,QAAgB,EAChBC,OAAe;EACf;EACAK,IAAS;IAET,MAAMb,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7D,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAAC;MAC9BqB,QAAQ,EAAE,qBAAqB;MAC/BZ,aAAa,EAAEJ,eAAe,GAAG,UAAUA,eAAe,EAAE,GAAG;KAChE,CAAC;IACF,OAAO,IAAI,CAACF,IAAI,CAACc,IAAI,CAAI,GAAGN,MAAM,IAAIC,QAAQ,IAAIC,OAAO,EAAE,EAAEK,IAAI,EAAE;MACjEV,OAAO,EAAEA,OAAO;MAChBQ,eAAe,EAAE;KAClB,CAAC;EACJ;;;uCA9FWf,cAAc,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdxB,cAAc;MAAAyB,OAAA,EAAdzB,cAAc,CAAA0B,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}