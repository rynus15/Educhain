{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/backend.service\";\nexport class LibroService {\n  constructor(backendService) {\n    this.backendService = backendService;\n    this.api = `libro`;\n  }\n  getLibros() {\n    return this.backendService.get(environment.apiUrlAuth, this.api, 'listar');\n  }\n  static {\n    this.ɵfac = function LibroService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LibroService)(i0.ɵɵinject(i1.BackendService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LibroService,\n      factory: LibroService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","LibroService","constructor","backendService","api","getLibros","get","apiUrlAuth","i0","ɵɵinject","i1","BackendService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\david\\Documents\\frontend\\75320-front\\src\\app\\demo\\pages\\libros\\service\\libro.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Libro } from 'src/app/models/libro';\r\nimport { BackendService } from 'src/app/services/backend.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LibroService {\r\n  private api = `libro`;\r\n\r\n  constructor(private backendService: BackendService) { }\r\n\r\n  getLibros(): Observable<Libro[]> {\r\n    return this.backendService.get(environment.apiUrlAuth, this.api, 'listar');\r\n  }\r\n}"],"mappings":"AAIA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAF1B,KAAAC,GAAG,GAAG,OAAO;EAEiC;EAEtDC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,cAAc,CAACG,GAAG,CAACN,WAAW,CAACO,UAAU,EAAE,IAAI,CAACH,GAAG,EAAE,QAAQ,CAAC;EAC5E;;;uCAPWH,YAAY,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;aAAZV,YAAY;MAAAW,OAAA,EAAZX,YAAY,CAAAY,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}