{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/backend.service\";\nexport class AutorService {\n  constructor(backendService) {\n    this.backendService = backendService;\n    this.api = `autor`;\n    this.testService();\n  }\n  testService() {\n    this.backendService.get(environment.apiUrlAuth, this.api, \"test\");\n  }\n  getAutores() {\n    return this.backendService.get(environment.apiUrlAuth, this.api, \"listar\");\n  }\n  crearAutor(autor) {\n    return this.backendService.post(environment.apiUrlAuth, this.api, \"guardar-autor\", autor);\n  }\n  actualizarAutor(autor) {\n    return this.backendService.post(environment.apiUrlAuth, this.api, \"actualizar-autor\", autor);\n  }\n  static {\n    this.ɵfac = function AutorService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AutorService)(i0.ɵɵinject(i1.BackendService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AutorService,\n      factory: AutorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","AutorService","constructor","backendService","api","testService","get","apiUrlAuth","getAutores","crearAutor","autor","post","actualizarAutor","i0","ɵɵinject","i1","BackendService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\david\\Documents\\frontend\\75320-front\\src\\app\\demo\\pages\\autor\\service\\autor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Autor } from 'src/app/models/autor';\r\nimport { AutorRq } from 'src/app/models/autor-rq';\r\nimport { AutorRs } from 'src/app/models/autor-rs';\r\nimport { BackendService } from 'src/app/services/backend.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AutorService {\r\n  private api = `autor`;\r\n\r\n  constructor(private backendService: BackendService) {\r\n    this.testService();\r\n  }\r\n\r\n  testService() {\r\n    this.backendService.get(environment.apiUrlAuth, this.api, \"test\");\r\n  }\r\n\r\n  getAutores(): Observable<Autor[]> {\r\n    return this.backendService.get(environment.apiUrlAuth, this.api, \"listar\");\r\n  }\r\n\r\n  crearAutor(autor: AutorRq): Observable<AutorRs> {\r\n    return this.backendService.post(environment.apiUrlAuth,\r\n      this.api, \"guardar-autor\", autor);\r\n  }\r\n\r\n  actualizarAutor(autor: Autor): Observable<AutorRs> {\r\n    return this.backendService.post(environment.apiUrlAuth,\r\n      this.api, \"actualizar-autor\", autor);\r\n  }\r\n}"],"mappings":"AAMA,SAASA,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAF1B,KAAAC,GAAG,GAAG,OAAO;IAGnB,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAACF,cAAc,CAACG,GAAG,CAACN,WAAW,CAACO,UAAU,EAAE,IAAI,CAACH,GAAG,EAAE,MAAM,CAAC;EACnE;EAEAI,UAAUA,CAAA;IACR,OAAO,IAAI,CAACL,cAAc,CAACG,GAAG,CAACN,WAAW,CAACO,UAAU,EAAE,IAAI,CAACH,GAAG,EAAE,QAAQ,CAAC;EAC5E;EAEAK,UAAUA,CAACC,KAAc;IACvB,OAAO,IAAI,CAACP,cAAc,CAACQ,IAAI,CAACX,WAAW,CAACO,UAAU,EACpD,IAAI,CAACH,GAAG,EAAE,eAAe,EAAEM,KAAK,CAAC;EACrC;EAEAE,eAAeA,CAACF,KAAY;IAC1B,OAAO,IAAI,CAACP,cAAc,CAACQ,IAAI,CAACX,WAAW,CAACO,UAAU,EACpD,IAAI,CAACH,GAAG,EAAE,kBAAkB,EAAEM,KAAK,CAAC;EACxC;;;uCAvBWT,YAAY,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;aAAZf,YAAY;MAAAgB,OAAA,EAAZhB,YAAY,CAAAiB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}