{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HeadersInterceptor {\n  intercept(req, next) {\n    const clonedRequest = req.clone({\n      setHeaders: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const hasContentType = clonedRequest.headers.has('Content-Type');\n    return next.handle(clonedRequest);\n  }\n  addHeaders(request) {\n    return request = request.clone({\n      setHeaders: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  static {\n    this.ɵfac = function HeadersInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HeadersInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HeadersInterceptor,\n      factory: HeadersInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["HeadersInterceptor","intercept","req","next","clonedRequest","clone","setHeaders","hasContentType","headers","has","handle","addHeaders","request","factory","ɵfac"],"sources":["C:\\Users\\david\\Documents\\frontend\\75320-front\\src\\app\\interceptors\\headers.interceptor.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpContext, HttpContextToken, HttpHeaders } from '@angular/common/http';\r\n\r\n\r\n@Injectable()\r\nexport class HeadersInterceptor implements HttpInterceptor {\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const clonedRequest = req.clone({\r\n      setHeaders: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const hasContentType = clonedRequest.headers.has('Content-Type');\r\n\r\n    return next.handle(clonedRequest);\r\n  }\r\n\r\n  addHeaders(request: HttpRequest<unknown>): HttpRequest<any> {\r\n    return (request = request.clone({\r\n      setHeaders: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }));\r\n  }\r\n}"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAE7BC,SAASA,CACPC,GAAqB,EACrBC,IAAiB;IAEjB,MAAMC,aAAa,GAAGF,GAAG,CAACG,KAAK,CAAC;MAC9BC,UAAU,EAAE;QACV,cAAc,EAAE;;KAEnB,CAAC;IACF,MAAMC,cAAc,GAAGH,aAAa,CAACI,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAEhE,OAAON,IAAI,CAACO,MAAM,CAACN,aAAa,CAAC;EACnC;EAEAO,UAAUA,CAACC,OAA6B;IACtC,OAAQA,OAAO,GAAGA,OAAO,CAACP,KAAK,CAAC;MAC9BC,UAAU,EAAE;QACV,cAAc,EAAE;;KAEnB,CAAC;EACJ;;;uCAtBWN,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAa,OAAA,EAAlBb,kBAAkB,CAAAc;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}